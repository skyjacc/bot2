const Logger = require('../logger');
const SettingsManager = require('../settingsManager');
const { ALLOWED_GUILD_IDS } = require('../config');

module.exports = async function onReady(client, commandManager, scheduleManager) {
    try {
        await SettingsManager.load();
        Logger.info('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.');

    for (const guild of client.guilds.cache.values()) {
    if (ALLOWED_GUILD_IDS.includes(guild.id)) {
        await commandManager.register(guild.id);
        Logger.info(`‚úÖ –ö–æ–º–∞–Ω–¥—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è ${guild.name} (${guild.id})`);
    }
    }
// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
        
        scheduleManager.start();
        Logger.success('‚è∞ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ–ø—Ä–æ—Å–æ–≤ –∑–∞–ø—É—â–µ–Ω.');

        scheduleManager.startDailyGuildCheck(client); // ‚Üê –≤–æ—Ç —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞

        client.user.setActivity('–æ–ø—Ä–æ—Å—ã /startpoll', { type: 3 });

        Logger.success(`–ë–æ—Ç –≥–æ—Ç–æ–≤! –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ ${client.user.tag} (${client.user.id})`);
        Logger.info(`–ü–æ–¥–∫–ª—é—á–µ–Ω –∫ ${client.guilds.cache.size} —Å–µ—Ä–≤–µ—Ä–∞–º:`);

        for (const guild of client.guilds.cache.values()) {
            const config = SettingsManager.getConfig(guild.id);

            if (!ALLOWED_GUILD_IDS.includes(guild.id)) {
                Logger.warn(`üõë ${guild.name} (${guild.id}) ‚Äî –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö. –ü–æ–∫–∏–¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä...`);
                try {
                    await guild.leave();
                } catch (err) {
                    Logger.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–∫–∏–Ω—É—Ç—å —Å–µ—Ä–≤–µ—Ä ${guild.id}:`, err);
                }
                continue;
            }

            const status = config
                ? `–ê–≤—Ç–æ–æ–ø—Ä–æ—Å—ã: ${config.enabled ? 'üü¢ –í–ö–õ' : 'üî¥ –í–´–ö–õ'}, –ö–∞–Ω–∞–ª: ${config.channelId || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`
                : '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω';

            Logger.info(`  ‚Ä¢ ${guild.name} (${guild.id}) ‚Äî ${status}`);
        }
    } catch (error) {
        Logger.error('–û—à–∏–±–∫–∞ –≤ onReady –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ:', error);
    }
};
